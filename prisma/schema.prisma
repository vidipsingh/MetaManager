generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Organization {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[]
}

model Todo {
  id          String    @id @default(cuid())
  title       String
  description String?
  priority    Priority  @default(NORMAL)
  dueDate     DateTime?
  completed   Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  userId      String
  projectId   String?
  project     Project?  @relation(fields: [projectId], references: [id])
  user        User      @relation(fields: [userId], references: [id])
}

model CalendarEvent {
  id          String   @id @default(cuid())
  title       String
  description String?
  startTime   DateTime
  endTime     DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String
  user        User     @relation(fields: [userId], references: [id])
}

model Project {
  id        String   @id @default(cuid())
  name      String
  color     String   @default("#808080")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  todos     Todo[]
}

model User {
  id              String         @id @default(cuid())
  name            String?
  email           String?        @unique
  password        String?
  ethAddress      String?        @unique
  emailVerified   DateTime?
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  organizationId  String?
  organization    Organization?  @relation(fields: [organizationId], references: [id])
  sentMessages    Message[]      @relation("SentMessages")
  receivedMessages Message[]     @relation("ReceivedMessages")
  todos           Todo[]
  projects        Project[]
  calendarEvents  CalendarEvent[]
  conversations   Conversation[] @relation("ConversationToUser")
}

model Message {
  id             String       @id @default(cuid())
  content        String
  createdAt      DateTime     @default(now())
  senderId       String
  receiverId     String
  conversationId String
  conversation   Conversation @relation(fields: [conversationId], references: [id])
  receiver       User         @relation("ReceivedMessages", fields: [receiverId], references: [id])
  sender         User         @relation("SentMessages", fields: [senderId], references: [id])
}

model Conversation {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  messages  Message[]
  users     User[]    @relation("ConversationToUser")
}

enum Priority {
  LOW
  NORMAL
  HIGH
  URGENT
}